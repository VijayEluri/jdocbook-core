apply plugin: 'java'
apply plugin: 'maven'  // used for 'install' and 'upload'/'deploy' task
apply plugin: 'eclipse'
apply plugin: 'idea'
apply { url: 'https://loom.svn.sourceforge.net/svnroot/loom/shared/trunk/artifacts.gradle' } // sets up source and javadoc jar uploads

defaultTasks 'classes'

repositories {
    mavenCentral()
    mavenRepo name: "jboss", urls: "http://repository.jboss.org/nexus/content/groups/public/"
    mavenRepo name: "mavenCache", urls: "file://" + System.getProperty('user.home') + "/.m2/repository/"
}

configurations {
    deployerJars
}

dependencies {
    slf4jVersion = '1.6.1'
    commonsExecVersion = '1.0.1'
    doctypeChangerVersion = '1.1'
    xmlResolverVersion = '1.1'
    xercesVersion = '2.8.0'
    saxonVersion = '6.5.3'
    plexusUtilsVersion = '2.0.3'
    fopVersion = '1.0'
	xmlGraphicsCommonsVersion = '1.4'
    avalonVersion = '4.3.1'
    jdomVersion = '1.0'

    junitVersion = '3.8.2'

    compile(
            [group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
            [group: 'org.apache.commons', name: 'commons-exec', version: commonsExecVersion],
            [group: 'net.socialchange.doctype', name: 'doctype-changer', version: doctypeChangerVersion],
            [group: 'xml-resolver', name: 'xml-resolver', version: xmlResolverVersion],
            [group: 'xerces', name: 'xercesImpl', version: xercesVersion],
            [group: 'saxon', name: 'saxon', version: saxonVersion],
            [group: 'org.codehaus.plexus', name: 'plexus-utils', version: plexusUtilsVersion],
            [group: 'org.apache.xmlgraphics', name: 'fop', version: fopVersion],
            [group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: xmlGraphicsCommonsVersion],
            [group: 'org.apache.avalon.framework', name: 'avalon-framework-api', version: avalonVersion],
            [group: 'org.apache.avalon.framework', name: 'avalon-framework-impl', version: avalonVersion],
            [group: 'jdom', name: 'jdom', version: jdomVersion],
			[group: 'net.sf.docbook', name: 'docbook', version: '1.72.0']
    )
    testCompile(
            [group: 'junit', name: 'junit', version: junitVersion],
            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion],
            [group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion]
    )
    deployerJars "org.apache.maven.wagon:wagon-http:1.0-beta-6"
}

group = 'org.jboss.jdocbook'
version = '1.0.4'

manifest.mainAttributes(
    provider: 'gradle',
    'Implementation-Url': 'http://jboss.org',
    'Implementation-Version': version,
    'Implementation-Vendor': 'JBoss.org',
    'Implementation-Vendor-Id': 'org.jboss'
)

def pomConfig = {
    name 'jDocBook Core'
    description 'The core jDocBook functionality'
    url 'http://github.com/sebersole/jdocbook-core'
    organization 'JBoss.org'
    issueManagement {
        system 'github'
        url 'http://github.com/sebersole/jdocbook-core/issues'
    }
    scm {
        url "http://github.com/sebersole/jdocbook-core"
        connection "scm:git:http://github.com/sebersole/jdocbook-core.git"
        developerConnection "scm:git:git@github.com:sebersole/jdocbook-core.git"
    }
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'sebersole'
            name 'Steve Ebersole'
        }
        developer {
            id 'stliu'
            name 'Strong Liu'
        }
    }
}

configure(install.repositories.mavenInstaller) {
    pom.project pomConfig
}

if ( ! hasProperty('MY_JBOSS_USER') ) {
    MY_JBOSS_USER = "";
}
if ( ! hasProperty('MY_JBOSS_PASS') ) {
    MY_JBOSS_PASS = "";
}

uploadArchives {
    repositories.mavenDeployer {
        name = 'jbossDeployer'
        configuration = configurations.deployerJars
        pom.project pomConfig
        credentials = [userName: MY_JBOSS_USER, password: MY_JBOSS_PASS]
        repository(url: "https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/") {
            authentication(credentials)
        }
        snapshotRepository(url: "https://repository.jboss.org/nexus/content/repositories/snapshots/") {
            authentication(credentials)
        }
    }
}